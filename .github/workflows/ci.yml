name: CI
on:
  push:
    branches-ignore: ['wip-*']
  pull_request:
    branches-ignore: ['wip-*']
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        if: ${{ !env.ACT }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      
      # Frontend linting
      - uses: actions/cache@v4
        if: ${{ !env.ACT }}
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
      - run: npm install --legacy-peer-deps
        working-directory: frontend
      - run: npm run lint
        working-directory: frontend
        continue-on-error: true
      
      # Backend linting
      - uses: actions/cache@v4
        if: ${{ !env.ACT }}
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
      - run: npm install --legacy-peer-deps
        working-directory: backend
      - run: npm run lint
        working-directory: backend
        continue-on-error: true

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
        if: ${{ !env.ACT }}
      - uses: actions/setup-node@v4
        if: ${{ !env.ACT }}
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/setup-node@v4
        if: ${{ env.ACT }}
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v4
        if: ${{ !env.ACT }}
        with:
          path: |
            backend/node_modules
            ~/.cache/mongodb-binaries
          key: ${{ runner.os }}-backend-node${{ matrix.node-version }}-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-node${{ matrix.node-version }}-
            ${{ runner.os }}-backend-
      - run: mkdir -p backend/environments
      - run: npm install --legacy-peer-deps
        working-directory: backend
      - run: npm run build --if-present
        working-directory: backend
      - run: npm test
        working-directory: backend